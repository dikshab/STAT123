q()
library("car")
install.packages("car")
if(!require(installr)) {
install.packages("installr"); require(installr)
updateR()
install.packages("installr"); require(installr)
updateR()
version
version
dir
X919report_data <- read.excel("C:\Users\Diksha Bansal\Downloads\Project.xlsx")
X919report_data <- read.excel("C:/Users/Diksha Bansal/Downloads/Project.xlsx")
X919report_data <- read.excel('C:/Users/Diksha Bansal/Downloads/Project.xlsx')
X919report_data <- read_excel("C:\Users\Diksha Bansal\Downloads\Project.xlsx")
X919report_data <- read_excel("C:/Users/Diksha Bansal/Downloads/Project.xlsx")
getwd()
setwd("C:/Users/Diksha Bansal/Documents/GitHub/STAT 123/")
X919_data <- read_excel("919report_data.xlsx")
install.packages(readxl)
install.packages("readxl")
X919_data <- read_excel("919report_data.xlsx")
library(readxl)
install.packages("readxl")
install.packages("ggplot2")
library(readxl)
X919_data <- read_excel("919report_data.xlsx")
X919_data
summary(X919_data)
X919_data <- read_excel("919report_data.xlsx", header = T)
X919_data <- read_excel("919report_data.xlsx", header=T)
timing_cat <- c("Dawn", "Morning", "Noon", "Afternoon", "Evening", "Night" )
X919_time <- X919_data$Time
X919_time
str(X919_data)
X919_data <- read_excel("919report_data.xlsx", as.is=TRUE)
X919_data <- read_excel("919report_data.xlsx", col_names = T, col_types = NULL, na = "")
str(X919_data)
time_vector <- X919_data$Time
time_vector
len <- length(time_vector)
for(i in 1:len){}
for(i in 1:len){
}
end
len
for(i in 1:len){
if(time_vector[i] > 0 && time_vector[i] <= 16666666666666667)
}
for(i in 1:len){
if(time_vector[i] > 0 && time_vector[i] <= 16666666666666667)
}
for(i in 1:len){
if(time_vector[i] > 0 && time_vector[i] <= 16666666666666667){
char_time[i] = "Dawn"
} else{
if(time_vector[i] > 16666666666666667 && time_vector[i] <= 0.33333333333333333){
char_time[i] = "Morning"
} else{
if(time_vector[i] > 0.33333333333333333 && time_vector[i] <= 0.5){
char_time[i] = "Noon"
} else{
if(time_vector[i] > 0 && time_vector[i] <16666666666666667){
{{}}
}
}
}}}}
for(i in 1:len){
if(time_vector[i] > 0 && time_vector[i] <= 0.16666666666666667){
char_time[i] = "Dawn"
} else if(time_vector[i] > 0.16666666666666667 && time_vector[i] <= 0.33333333333333333){
char_time[i] = "Morning"
} else if(time_vector[i] > 0.33333333333333333 && time_vector[i] <= 0.5){
char_time[i] = "Noon"
} else if(time_vector[i] > 0.5 && time_vector[i] <= 0.66666666666666667){
char_time[i] = "Afternoon"
} else if(time_vector[i] > 0.66666666666666667 && time_vector[i] <= 0.83333333333333333){
char_time[i] = "Evening"
} else{
char_time[i] = "Night"
}
}
typeof("Morning")
char_time <- vector(mode = "character", length = len)
for(i in 1:len){
if(time_vector[i] > 0 && time_vector[i] <= 0.16666666666666667){
char_time[i] = "Dawn"
} else if(time_vector[i] > 0.16666666666666667 && time_vector[i] <= 0.33333333333333333){
char_time[i] = "Morning"
} else if(time_vector[i] > 0.33333333333333333 && time_vector[i] <= 0.5){
char_time[i] = "Noon"
} else if(time_vector[i] > 0.5 && time_vector[i] <= 0.66666666666666667){
char_time[i] = "Afternoon"
} else if(time_vector[i] > 0.66666666666666667 && time_vector[i] <= 0.83333333333333333){
char_time[i] = "Evening"
} else{
char_time[i] = "Night"
}
}
char_time
str(X919_data)
summary(char_time
)
factor_time <- factor(char_time, ordered = T, levels = timing_cat)
summary(factor_time)
timing_cat <- c("Dawn", "Morning", "Noon", "Afternoon", "Evening", "Night" )
police_call <- X919_data$'Call initiated to: Police (911)'
police_time <- vector(mode = "character", length = len)
for(i in 1:len){
if(police_call[i] = 1){}
for(i in 1:len){
if(police_call[i] = 1){
for(i in 1:len){
if(police_call[i] = 1){
if(police_call[i] = "1"){
for(i in 1:len){
if(police_call[i] = "1"){
if(police_call[i] == 1){
}
for(i in 1:len){
if(police_call[i] == 1){
police_time[i] = "Attended"
}
else
police_time[i] = "Not Attended"
}
custdata <- read.table('C:/Users/Diksha Bansal/Documents/GitHub/STAT 123/Chapter 3-20180403/custdata.tsv', header = 'T', sep = '\t')
custdata <- read.table('C:/Users/Diksha Bansal/Documents/GitHub/STAT 123/Chapter 3-20180403/custdata.tsv', header = T, sep = '\t')
clean <- summary(X919_data[is.na(X919_data$'Call initiated to: Police (911)')])
clean <- summary(X919_data[is.na(X919_data$'Call initiated to: Police (911)')])
summary(X919_data[is.na(X919_data$`Call initiated to: Police (911)`)])
summary(X919_data[is.na(X919_data$"Call initiated to: Police (911)")])
summary(X919_data[is.na(X919_data$'Call initiated to: Police (911)')])
police_call <- X919_data$`Call initiated to: Police (911)`
summary(X919_data[is.na(police_call)]
)
summary(police_call)
police_call
for(int i in 1:len){
for(i in 1:len){
if(police_call[i] == T){
}}}
count = 0;
for(i in 1:len){
if(police_call[i] == T){
count++
}
for(i in 1:len){
if(police_call[i] == T){
count= count+1
}
}
for(i in 1:len){
if(police_call[i] == T){
count= count+1
} else
{
count
}
}
for(i in 1:len){
if(police_call[i] == T{}){
police_df <- data.frame(police_call)
police_df
sapply(police_df, function(x)
as.numeric(gsub("(^ +)|( +$)", "0", x)))
for(i in 1:len){
if(police_df[i] == T){
count= count+1
} else{
count
}
}
X919_data$over_amb <- ifelse(is.na(X919_data$'Call initiated to: Ambulance  (911)')|| (X919_data$Overdose), "missing", ifelse(X919_data$'Call initiated to: Ambulance  (911)' == T && (X919_data$Overdose == T), "Overdosed and Ambulance", "Nothing"))
summary(as.factor(X919_data$over_amb))
police_df <- data.frame(police_call)
regression.dat <- read.csv('C:/Users/Diksha Bansal/Documents/GitHub/STAT 123/stat123_regression.csv')
summary(regression.dat)
boxplot(regression.dat$ADL)
plot(regression.dat$ADL, regression.dat$KBI, main = "ADL vs KBI", xlab = "ADL", ylab = "KBI")
plot(regression.dat$MEM, regression.dat$KBI, main = "MEM vs KBI", xlab = "MEM", ylab = "KBI")
plot(regression.dat$COG, regression.dat$KBI, main = "COG vs KBI", xlab = "COG", ylab = "KBI")
ADL.lm = lm(regression.dat$KBI ~ regression.dat$ADL, data = regression.dat)
ADL.lm
MEM.lm = lm(regression.dat$KBI ~ regression.dat$MEM, data = regression.dat)
MEM.lm
COG.lm = lm(regression.dat$KBI ~ regression.dat$COG, data = regression.dat)
COG.lm
X919_data$over_amb <- ifelse(is.na(X919_data$'Call initiated to: Ambulance  (911)')|| (X919_data$Overdose), "missing", ifelse(X919_data$'Call initiated to: Ambulance  (911)' == T && (X919_data$Overdose == T), "Overdosed and Ambulance", "Nothing"))
X919_data$over_amb
X919_data$over_amb <- ifelse((X919_data$'Call initiated to: Ambulance  (911)' == 1 && (X919_data$Overdose == 1), "Overdosed and Ambulance")
X919_data$over_amb <- ifelse((X919_data$'Call initiated to: Ambulance  (911)' == 1 && (X919_data$Overdose == 1), "Overdosed and Ambulance", "no")
X919_data$over_amb <- ifelse((X919_data$'Call initiated to: Ambulance  (911)' == 1 && (X919_data$Overdose == 1),"Overdosed and Ambulance", "no")
ambulance <- X919_data$`Call initiated to: Ambulance  (911)`
X919_data$over_amb <- ifelse((ambulance == 1) && (X919_data$Overdose == 1), "Overdosed and Ambulance")
X919_data$over_amb
X919_data$over_amb <- ifelse((X919_data$`Call initiated to: Ambulance  (911)`==1) && (X919_data$Overdose==1), "overdose and ambulance")
X919_data$over_amb
ambulance <- X919_data$`Call initiated to: Ambulance  (911)`
ambulance
overdosed <- X919_data$Overdose
overdosed
ambulance & overdosed
for(i in 1:len){
if(ambulance[i] = "NA"){
for(i in 1:len){
if(ambulance[i] == "NA"){
ambulance[i] = 0
}
}
for(i in 1:len){
ambulance[i] = 0
}}
for(i in 1:len){
if(ambulance[i] == "NA"){
ambulance[i] = 0
} else{}
}
amb_df <- as.data.frame(ambulance)
amb_df[is.na(amb_df)] <- 0
amb_df
over_df <- as.data.frame(overdosed)
over_df[is.na(over_df)] <- 0
amb_df & over_df
amb_df * over_df
df[amb_df == "1" & over_df == "1"] <- 1
df[amb_df == "1" & over_df == "1"] <- "1"
df[amb_df == 1 & over_df == 1] <- 1
bitwOr(amb_df, over_df)
(amb_df == 1) && (over_df == 1)
amb_df
str(amb_df)
amb_df
over_df
subset(over_df, amb_df, subset = over_df = 1 && amb_df == 1)
subset(over_df, amb_df, subset = over_df == 1 && amb_df == 1)
class(amb_df)
typeof(amb_df)
class(over_df)
typeof(over_df)
amb_mat <- as.matrix(amb_df)
over_mat <- as.matrix(over_df)
amb_mat*over_mat
over_df*amb_df
over_df*amb_df
cor(factor_time, X919_data$`Event Location: Drop In`)
cor(X919_data$Time, X919_data$`Event Location: Drop In`)
over_df[is.na(over_df)] <- 0
source('~/GitHub/STAT 123/Project.pdf')
